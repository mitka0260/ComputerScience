public class Sample {
	public static void main(String[] args) {

/*
очень грубо: создаётся массив 1, 2, 3 ... до n-1, потом случайно перемешаивается и берётся m чисел подряд
так будет взято каждое число только один раз
*/
		//вывод случайной выборки из m целых чисел
		//из ряда от 0 до n-1 (без повторений)

		int m = Integer.parseInt(args[0]);	//6
		int n = Integer.parseInt(args[1]);	//16

		int[] perm = new int[n];		//создали массив длинной n=16

		for (int j = 0; j<n; j++) {
			perm[j] = j;		//заполнили массив числами 0, 1, 2, 3, ... до n-1
			System.out.print(perm[j] + " ");
		}
		System.out.println();

		for (int i=0; i<m; i++) {	//получаем выборку
			int r = i + (int)(Math.random()*(n-i));	// элемент perm[i] меняется со случайным элементом справа
			int t = perm[r];
			perm[r] = perm[i];
			perm[i] = t;
		}

		for (int i = 0; i<m; i++) {
			System.out.print(perm[i] + " ");  //вывод первых m чисел из выборки, но перестановленной
		}

		System.out.println();

/*
Такая программа может быть полезна, когда надо из другого массива набрать выборку, но сам этот другой массив не перемешивать
то есть, набирается выборка из элементов массива используя только индексы
+такого подхода в экономии ресурсов, в другом массиве может быть очень много данных и манипуляции с ними могут много кушать ресурсов

если m = n, программа переставляет случайно все элементы
*/

	}
}
