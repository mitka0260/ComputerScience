/*
множество Мандельброта - множество целых чисел - образует фрактальный узор, напоминающий папоротник Барнсли, треугольник Серпинского, броуновский мост, кривую Коха, путь пьяной черепахи и др узоры
Это множество точек определяется не одной формулой, а алгоритмом
Множестов состоит из комплексных чисел z(t+1) = z(t)^2 + z0
z0 = i+1

z0 = 1+i
z(t)^2 = 1 + 2i + i^2 = 1 + 2i - 1 = 2i
z(t)^2 + z0 = 2i + 1 + i = 1 + 3i

z1 = 1 + 3i
z1^2 = 1 + 6i + 9i^2 = -8 + 6i
z1^2 + z0 = -8 + 6i + 1 + i = -7 + 7i

z2 = -7 + 7i
z2^2 = 49 - 98i + 49i^2 = -98i
z2^2 + z0 = -98i + 1 + i = 1 - 97i

...

модуль этого ряда НЕ ДОЛЖЕН стремиться к бесконечности
ряд должен быть ограничен

программа строит точки на комплексной плоскости
x + iy = это точка (x, y)
если точка входит в множество, пиксель красится в чёрный цвет
будет квадрат 2х2, с центром в (-1/2 + 0i)

НЕТУ критерия что точка вхзодит в множество, но ЕСТЬ критерий если НЕ ВХОДИТ - еслит модуль любого числа последовательности > 2
 */

import java.awt.*;

public class Mandelbrot {

    //функция вычисляет последовательность М начиная с z0
    //возвращает кол-во итераций, для которых модуль <=2
    private static int mand(Complex z0, int max) {
        Complex z = z0;
        for (int t = 0; t < max; t++) {
            if (z.abs() > 2.0)
                return t;
            z = z.times(z).plus(z0);
        }
        return max;
    }

    public static void main(String[] args) {
        double xc = 0.1015; //или 0.1015 -0.633 0.01
        double yc = -0.633;    //-0,5 0,0 2
        double size = 0.01;
        int n = 512;    //0.25 megapixels, каждый чёрный пиксель хочет 255 итераций

        Picture picture = new Picture(n, n);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                double x0 = xc - size / 2 + size * i / n;
                double y0 = yc - size / 2 + size * j / n;
                Complex z0 = new Complex(x0, y0);
                int gray = 255 - mand(z0, 255); //создание оттенка серого для пикселя, любой серый пиксель не входит в множество М
                Color c = new Color(gray, gray, gray);
                picture.set(i, n - 1 - j, c);

                /*
                если пиксель чёрный, то он ПРЕДПОЛОЖИТЕЛЬНО входит в множество М. Но проверено это только для 255 итераций
                 */
            }
        }
        picture.show();
    }

}
